name: Complete Test Suite (31+ Cases)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Backend Analytics Tests (15 cases)
  backend-analytics-tests:
    name: ðŸ§® Backend Analytics Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Run KPI Engine Tests (10 cases)
        run: |
          pytest tests/test_kpi_engine.py -v --tb=short
          
      - name: Run Data Pipeline Tests (3 cases)
        run: |
          pytest tests/test_data_pipeline.py -v --tb=short
          
      - name: Run API Endpoint Tests (2 cases)
        run: |
          pytest tests/test_api_endpoints.py -v --tb=short

  # Frontend Component Tests (10 cases)
  frontend-component-tests:
    name: ðŸŽ¨ Frontend Component Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run Dashboard Component Tests (6 cases)
        run: |
          cd frontend
          npm test -- Dashboard.test.tsx --coverage --watchAll=false
          
      - name: Run Chart Rendering Tests (2 cases)
        run: |
          cd frontend
          npm test -- Charts.test.tsx --coverage --watchAll=false
          
      - name: Run User Interaction Tests (2 cases)
        run: |
          cd frontend
          npm test -- Interactions.test.tsx --coverage --watchAll=false

  # AI Integration Tests (6 cases)
  ai-integration-tests:
    name: ðŸ¤– AI Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  # Skip on PRs to save API costs
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install AI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install openai anthropic google-generativeai
          
      - name: Run OpenAI Integration Tests (2 cases)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pytest tests/test_ai_integrations.py -k "openai" -v
          
      - name: Run Anthropic Integration Tests (2 cases)
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          pytest tests/test_ai_integrations.py -k "anthropic" -v
          
      - name: Run Google Gemini Tests (2 cases)
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          pytest tests/test_ai_integrations.py -k "gemini" -v

  # Test Coverage Validation
  coverage-validation:
    name: ðŸ“Š Coverage Validation
    runs-on: ubuntu-latest
    needs: [backend-analytics-tests, frontend-component-tests]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Run comprehensive test suite with coverage
        run: |
          pytest tests/ --cov=src --cov-report=xml --cov-report=html --cov-fail-under=85
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          
      - name: Validate 31+ test cases executed
        run: |
          python scripts/validate_test_count.py --minimum=31
