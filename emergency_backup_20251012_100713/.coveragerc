[run]
source = src
branch = True
omit = 
    */tests/*
    */test_*
    */.venv/*
    */venv/*
    */migrations/*
    */settings/*
    */manage.py
    */setup.py
    */scripts/activate_project.*
    */scripts/Activate-Project.ps1
    */scripts/debug_server.py
    */scripts/run_coverage.py
    */scripts/install_drive_dependencies.py
    */scripts/uvicorn_manager.py
    */scripts/manage_kernels.py
    */__pycache__/*
    */node_modules/*
    */build/*
    */dist/*
    */htmlcov/*
    */data/*
    */credentials/*
    */temp/*
    */tmp/*
    */.pytest_cache/*
    */coverage.xml
    */coverage.json

[report]
precision = 2
show_missing = True
skip_covered = False
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    if self.debug:
    if settings.DEBUG
    if DEBUG
    if ENVIRONMENT == "development"
    raise AssertionError
    raise NotImplementedError
    raise ValueError\("Not implemented"\)
    raise RuntimeError\("Should not reach here"\)
    if 0:
    if False:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @\(abc\.\)?abstractmethod
    @abstractmethod
    @overload
    # Type checking imports
    if TYPE_CHECKING:
    # Defensive assertions
    assert False
    assert 0
    # Platform-specific code
    if sys.platform
    # Environment-specific code
    if os.environ.get
    # Logging calls that are debug only
    logger\.debug
    log\.debug
    # Error handling for external services
    except \(ConnectionError\|TimeoutError\|RequestException\):
    # Google API specific exclusions
    except google\.auth\.exceptions\.
    # FastAPI dependency injections \(testing complexity\)
    Depends\(

[html]
directory = htmlcov
title = Commercial-View Coverage Report
show_contexts = True
skip_empty = True
skip_covered = False

[xml]
output = coverage.xml

[json]
output = coverage.json
show_contexts = True
pretty_print = True

[paths]
source =
    src/
    */site-packages/
